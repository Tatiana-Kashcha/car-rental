{"version":3,"file":"static/js/123.0c0b8346.chunk.js","mappings":"wKAEaA,EAAUC,EAAAA,GAAAA,QAAH,kDAIPC,EAAYD,EAAAA,GAAAA,IAAH,4FAMTE,EAAeF,EAAAA,GAAAA,GAAH,+G,SCVZD,EAAU,SAAC,GAAD,IAAGI,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACrB,SAAC,EAAD,WACE,UAAC,EAAD,WACGD,IAAS,SAAC,EAAD,UAAiBA,IAC1BC,MAJgB,C,wJCEVC,EAAWL,EAAAA,GAAAA,IAAH,yMAWCM,EAAAA,EAAAA,OAAAA,WAGTC,EAAaP,EAAAA,GAAAA,IAAH,yJAQDM,EAAAA,EAAAA,OAAAA,OAGTE,EAAcR,EAAAA,GAAAA,OAAH,iPAiBXS,GAAUT,EAAAA,EAAAA,IAAOU,EAAAA,EAAPV,CAAH,yEAITM,EAAAA,EAAAA,OAAAA,S,SC9CLK,EAAYC,SAASC,eAAe,cAkC1C,EAhCc,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYV,EAAe,EAAfA,UAC3BW,EAAAA,EAAAA,YAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACLF,OAAOG,oBAAoB,UAAWD,EACvC,CACF,IAED,IAAMA,EAAgB,SAAAE,GACL,WAAXA,EAAEC,MACJP,GAEH,EAOD,OAAOQ,EAAAA,EAAAA,eACL,SAAC,EAAD,CAAYC,QANc,SAAAC,GACtBA,EAAIC,gBAAkBD,EAAIE,QAC5BZ,GAEH,EAEC,UACE,UAAC,EAAD,YACE,SAAC,EAAD,CAAea,KAAK,SAASJ,QAAST,EAAtC,UACE,SAAC,EAAD,MAEDV,OAGLO,EAEH,ECjCYiB,EAAkB5B,EAAAA,GAAAA,OAAH,6YAKjBM,EAAAA,EAAAA,OAAAA,MACWA,EAAAA,EAAAA,OAAAA,OAUiBA,EAAAA,EAAAA,eAAAA,YAKfA,EAAAA,EAAAA,OAAAA,aCpBXuB,EAAmB,WAC9B,OAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAUA,OACE,iCACE,SAAC,EAAD,CAAmBT,QAVL,WAChBS,GAAe,EAChB,EAQG,wBAECD,IACC,SAAC,EAAD,CAAOjB,WATM,WACjBkB,GAAe,EAChB,MAgBF,ECjBD,EAToB,WAClB,OACE,+BACE,SAACjC,EAAA,EAAD,CAASI,MAAM,eAAf,UACE,SAAC0B,EAAD,OAIP,C","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/CatalogListItems/CatalogListItems.styled.js","components/CatalogListItems/CatalogListItems.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-bottom: 150px;\n`;\n\nexport const Container = styled.div`\n  padding-left: 128px;\n  padding-right: 128px;\n  margin: 0 auto;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 32px;\n  font-weight: 600;\n  padding-top: 20px;\n  margin-bottom: 20px;\n`;\n","import * as s from './Section.styled';\n\nexport const Section = ({ title, children }) => (\n  <s.Section>\n    <s.Container>\n      {title && <s.SectionTitle>{title}</s.SectionTitle>}\n      {children}\n    </s.Container>\n  </s.Section>\n);\n","import styled from 'styled-components';\nimport { ReactComponent as CloseIconBtn } from '../../icons/x-close.svg';\nimport { globalStyled } from 'stylesheet/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: ${globalStyled.colors.secondary};\n`;\n\nexport const ModalField = styled.div`\n  position: relative;\n  width: 541px;\n  height: 752px;\n  padding: 40px;\n\n  border-radius: 24px;\n\n  background-color: ${globalStyled.colors.white};\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  cursor: pointer;\n  border: none;\n\n  background-color: transparent;\n`;\n\nexport const IconBtn = styled(CloseIconBtn)`\n  width: 100%;\n  height: 100%;\n\n  color: ${globalStyled.colors.primary};\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport * as s from './Modal.styled';\n\nconst ModalRoot = document.getElementById('modal-root');\n\nconst Modal = ({ closeModal, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  const handleBackdropClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      closeModal();\n    }\n  };\n  return createPortal(\n    <s.Backdrop onClick={handleBackdropClick}>\n      <s.ModalField>\n        <s.CloseButton type=\"button\" onClick={closeModal}>\n          <s.IconBtn />\n        </s.CloseButton>\n        {children}\n      </s.ModalField>\n    </s.Backdrop>,\n    ModalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport { globalStyled } from 'stylesheet/styled';\n\nexport const ButtonLearnMore = styled.button`\n  width: 274px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${globalStyled.colors.white};\n  background-color: ${globalStyled.colors.accent};\n  border: none;\n\n  padding: 12px 0;\n  border-radius: 12px;\n\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.43;\n\n  transition: background-color 250ms ${globalStyled.timingFunction.cubicBezier};\n\n  &:hover,\n  &:focus,\n  &.active {\n    background-color: ${globalStyled.colors.accentHover};\n  }\n`;\n","import { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport * as s from './CatalogListItems.styled';\n\nexport const CatalogListItems = () => {\n  const [isShowModal, setIsShowModal] = useState(false);\n\n  const showModal = () => {\n    setIsShowModal(true);\n  };\n\n  const closeModal = () => {\n    setIsShowModal(false);\n  };\n\n  return (\n    <>\n      <s.ButtonLearnMore onClick={showModal}>Learn more</s.ButtonLearnMore>\n\n      {isShowModal && (\n        <Modal closeModal={closeModal}>\n          {/* <CarDetails\n            id={id}\n            closeModal={closeModal}\n          /> */}\n        </Modal>\n      )}\n    </>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport { CatalogListItems } from 'components/CatalogListItems/CatalogListItems';\n\nconst CatalogPage = () => {\n  return (\n    <>\n      <Section title=\"Catalog page\">\n        <CatalogListItems />\n      </Section>\n    </>\n  );\n};\nexport default CatalogPage;\n"],"names":["Section","styled","Container","SectionTitle","title","children","Backdrop","globalStyled","ModalField","CloseButton","IconBtn","CloseIconBtn","ModalRoot","document","getElementById","closeModal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","onClick","evt","currentTarget","target","type","ButtonLearnMore","CatalogListItems","useState","isShowModal","setIsShowModal"],"sourceRoot":""}