{"version":3,"file":"static/js/69.586dea80.chunk.js","mappings":"kPAqIA,UAvHoB,WAClB,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,IAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAoCN,EAAAA,EAAAA,UAAS,IAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KACA,GAAsCR,EAAAA,EAAAA,UAAS,IAA/C,eAAOS,EAAP,KAAoBC,EAApB,KACA,GAAkCV,EAAAA,EAAAA,UAAS,IAA3C,eAAOW,EAAP,KAAkBC,EAAlB,KACA,GAAkCZ,EAAAA,EAAAA,WAAS,GAA3C,eAAOa,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GAEb,IAAME,EAAW,mCAAG,8GAEOC,EAAAA,EAAAA,KAFP,OAEVC,EAFU,OAGhBhB,EAAegB,EAASC,MACxBf,EAAiBc,EAASC,MAJV,gDAMhBC,QAAQC,IAAR,MANgB,yBAQhBP,GAAa,GACbQ,EAAAA,QAAAA,SATgB,4EAAH,qDAYjBN,GACD,GAAE,IAEH,IAyBMO,GAAgBC,EAAAA,EAAAA,IAAcvB,EAAaI,GAE3CoB,GAAiBC,EAAAA,EAAAA,IAAeH,EAAehB,GAE/CoB,GAAmBC,EAAAA,EAAAA,IACvBH,EACAhB,EACAE,GAGIkB,GAA0BD,EAAAA,EAAAA,IAC9BL,EACAd,EACAE,GAiCF,OACE,+BACE,UAAC,IAAD,WACGE,GAAaS,EAAAA,QAAAA,UAEd,SAAC,IAAD,CACEH,KAAMlB,EACN6B,aArCa,SAAAC,GACnBA,EAAIC,iBAGF5B,GADGG,IAAeE,IAAgBE,GACjBY,EAIdhB,EAKAE,GAAgBE,EAKJgB,EAJEF,EALAI,EAUpB,EAmBOI,aA/Ea,SAAAF,GACnB,MAAwBA,EAAIG,OAApBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,aACH7B,EAAc8B,GACd,MAEF,IAAK,aACH5B,EAAc4B,GACd,MAEF,IAAK,iBACH1B,EAAe0B,GACf,MAEF,IAAK,eACHxB,EAAawB,GAMlB,EAyDOC,aAlBa,WACnB/B,EAAc,IACdE,EAAc,IACdE,EAAe,IACfE,EAAa,KACb0B,EAAAA,EAAAA,KACAlC,EAAiBH,EAClB,EAYOQ,YAAaA,EACbE,UAAWA,KAEXR,EAAcoC,SACd,SAAC,IAAD,CAASC,KAAK,wDAEhB,SAAC,IAAD,CAAarB,KAAMhB,QAI1B,C","sources":["pages/CatalogPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getCatalogCar } from 'api/operations';\nimport { Section } from 'components/Section/Section';\nimport { CatalogList } from 'components/CatalogList/CatalogList';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { FilterCar } from 'components/FilterCar/FilterCar';\nimport { Message } from 'components/Message/Message';\nimport { clearSelect } from 'helpers/clearSelect';\nimport {\n  getCarsByMake,\n  getCarsByPrice,\n  getCarsByMileage,\n} from 'helpers/getCars';\n\nconst CatalogPage = () => {\n  const [dataCatalog, setDataCatalog] = useState([]);\n  const [filterCatalog, setFilterCatalog] = useState([]);\n  const [inputBrand, setInputBrand] = useState('');\n  const [inputPrice, setInputPrice] = useState('');\n  const [mileageFrom, setMileageFrom] = useState('');\n  const [mileageTo, setMileageTo] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const catalogCars = async () => {\n      try {\n        const response = await getCatalogCar();\n        setDataCatalog(response.data);\n        setFilterCatalog(response.data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n        Loading.remove();\n      }\n    };\n    catalogCars();\n  }, []);\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'inputBrand':\n        setInputBrand(value);\n        break;\n\n      case 'inputPrice':\n        setInputPrice(value);\n        break;\n\n      case 'carMileageFrom':\n        setMileageFrom(value);\n        break;\n\n      case 'carMileageTo':\n        setMileageTo(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const filterMakeCar = getCarsByMake(dataCatalog, inputBrand);\n\n  const filterPriceCar = getCarsByPrice(filterMakeCar, inputPrice);\n\n  const filterMileageCar = getCarsByMileage(\n    filterPriceCar,\n    mileageFrom,\n    mileageTo\n  );\n\n  const filterMileageCarNoPrice = getCarsByMileage(\n    filterMakeCar,\n    mileageFrom,\n    mileageTo\n  );\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (!inputPrice & (!mileageFrom || !mileageTo)) {\n      setFilterCatalog(filterMakeCar);\n      return;\n    }\n\n    if (!inputPrice) {\n      setFilterCatalog(filterMileageCarNoPrice);\n      return;\n    }\n\n    if (!mileageFrom || !mileageTo) {\n      setFilterCatalog(filterPriceCar);\n      return;\n    }\n\n    setFilterCatalog(filterMileageCar);\n  };\n\n  const resetFilters = () => {\n    setInputBrand('');\n    setInputPrice('');\n    setMileageFrom('');\n    setMileageTo('');\n    clearSelect();\n    setFilterCatalog(dataCatalog);\n  };\n\n  return (\n    <>\n      <Section>\n        {isLoading && Loading.arrows()}\n\n        <FilterCar\n          data={dataCatalog}\n          handleSubmit={handleSubmit}\n          handleChange={handleChange}\n          resetFilters={resetFilters}\n          mileageFrom={mileageFrom}\n          mileageTo={mileageTo}\n        />\n        {!filterCatalog.length && (\n          <Message text=\"Sorry, there are no machines with such parameters!\" />\n        )}\n        <CatalogList data={filterCatalog} />\n      </Section>\n    </>\n  );\n};\nexport default CatalogPage;\n"],"names":["useState","dataCatalog","setDataCatalog","filterCatalog","setFilterCatalog","inputBrand","setInputBrand","inputPrice","setInputPrice","mileageFrom","setMileageFrom","mileageTo","setMileageTo","isLoading","setIsLoading","useEffect","catalogCars","getCatalogCar","response","data","console","log","Loading","filterMakeCar","getCarsByMake","filterPriceCar","getCarsByPrice","filterMileageCar","getCarsByMileage","filterMileageCarNoPrice","handleSubmit","evt","preventDefault","handleChange","target","name","value","resetFilters","clearSelect","length","text"],"sourceRoot":""}