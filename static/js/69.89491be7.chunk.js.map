{"version":3,"file":"static/js/69.89491be7.chunk.js","mappings":"gOAwHA,UAhHoB,WAClB,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,IAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAoCN,EAAAA,EAAAA,UAAS,IAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KACA,GAAsCR,EAAAA,EAAAA,UAAS,IAA/C,eAAOS,EAAP,KAAoBC,EAApB,KACA,GAAkCV,EAAAA,EAAAA,UAAS,IAA3C,eAAOW,EAAP,KAAkBC,EAAlB,KACA,GAAkCZ,EAAAA,EAAAA,WAAS,GAA3C,eAAOa,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GAEb,IAAME,EAAW,mCAAG,8GAEOC,EAAAA,EAAAA,KAFP,OAEVC,EAFU,OAGhBhB,EAAegB,EAASC,MACxBf,EAAiBc,EAASC,MAJV,gDAMhBC,QAAQC,IAAR,MANgB,yBAQhBP,GAAa,GACbQ,EAAAA,QAAAA,SATgB,4EAAH,qDAYjBN,GACD,GAAE,IAkEH,OACE,+BACE,UAAC,IAAD,WACGH,GAAaS,EAAAA,QAAAA,UAEd,SAAC,IAAD,CACEH,KAAMlB,EACNsB,aA9Ca,SAAAC,GACnBA,EAAIC,iBAYJ,IAAMC,EAAYzB,EACf0B,QAAO,qBAAGC,KAAgBC,SAASxB,EAA5B,IACPsB,QAAO,qBAAGG,YAA8BD,SAAStB,EAA1C,IAEVH,EAAiBsB,GACjBN,QAAQC,IAAI,CAAEhB,WAAAA,EAAYE,WAAAA,EAAYE,YAAAA,EAAaE,UAAAA,IACnDS,QAAQC,IAAIK,EACb,EA2BOK,YAxEY,SAAAP,GAClB,MAAwBA,EAAIQ,OAApBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,aACH3B,EAAc4B,GACd,MAEF,IAAK,aACH1B,EAAc0B,GACd,MAEF,IAAK,iBACHxB,EAAewB,GACf,MAEF,IAAK,eACHtB,EAAasB,GAMlB,EAkDOC,aA1Ba,WACnB7B,EAAc,IACdE,EAAc,IACdE,EAAe,IACfE,EAAa,IAMf,WACE,IAAIwB,EAAmBC,SAASC,eAAe,kBAC3CC,EAAmBF,SAASC,eAAe,gBAC/CF,EAAiBI,WAAa,GAC9BD,EAAiBC,WAAa,EAC/B,CAVCC,GACArC,EAAiBH,GACjBmB,QAAQC,IAAI,CAAEhB,WAAAA,EAAYE,WAAAA,EAAYE,YAAAA,EAAaE,UAAAA,GACpD,EAmBOF,YAAaA,EACbE,UAAWA,KAEXR,EAAcuC,SACd,SAAC,IAAD,CAASC,KAAK,wDAEhB,SAAC,IAAD,CAAaxB,KAAMhB,QAI1B,C","sources":["pages/CatalogPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getCatalogCar } from 'api/operations';\nimport { Section } from 'components/Section/Section';\nimport { CatalogList } from 'components/CatalogList/CatalogList';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { FilterCar } from 'components/FilterCar/FilterCar';\nimport { Message } from 'components/Message/Message';\n\nconst CatalogPage = () => {\n  const [dataCatalog, setDataCatalog] = useState([]);\n  const [filterCatalog, setFilterCatalog] = useState([]);\n  const [inputBrand, setInputBrand] = useState('');\n  const [inputPrice, setInputPrice] = useState('');\n  const [mileageFrom, setMileageFrom] = useState('');\n  const [mileageTo, setMileageTo] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const catalogCars = async () => {\n      try {\n        const response = await getCatalogCar();\n        setDataCatalog(response.data);\n        setFilterCatalog(response.data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n        Loading.remove();\n      }\n    };\n    catalogCars();\n  }, []);\n\n  const handleCange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'inputBrand':\n        setInputBrand(value);\n        break;\n\n      case 'inputPrice':\n        setInputPrice(value);\n        break;\n\n      case 'carMileageFrom':\n        setMileageFrom(value);\n        break;\n\n      case 'carMileageTo':\n        setMileageTo(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    // const filterMakeCar = dataCatalog.filter(({ make }) =>\n    //   make.includes(inputBrand)\n    // );\n    // const filterrentalPriceCar = filterMakeCar.filter(\n    //   ({ rentalPrice }) => rentalPrice === inputPrice\n    // );\n    // const filterCar = filterrentalPriceCar.filter(\n    //   ({ mileage }) => (mileage > mileageFrom) & (mileage < mileageTo)\n    // );\n\n    const filterCar = dataCatalog\n      .filter(({ make }) => make.includes(inputBrand))\n      .filter(({ rentalPrice }) => rentalPrice.includes(inputPrice));\n\n    setFilterCatalog(filterCar);\n    console.log({ inputBrand, inputPrice, mileageFrom, mileageTo });\n    console.log(filterCar);\n  };\n\n  const resetFilters = () => {\n    setInputBrand('');\n    setInputPrice('');\n    setMileageFrom('');\n    setMileageTo('');\n    clearSelect();\n    setFilterCatalog(dataCatalog);\n    console.log({ inputBrand, inputPrice, mileageFrom, mileageTo });\n  };\n\n  function clearSelect() {\n    let selectInputBrand = document.getElementById('inputBrandText');\n    let selectInputPrice = document.getElementById('inputPriceTo');\n    selectInputBrand.innerHTML += '';\n    selectInputPrice.innerHTML += '';\n  }\n\n  return (\n    <>\n      <Section>\n        {isLoading && Loading.arrows()}\n\n        <FilterCar\n          data={dataCatalog}\n          handleSubmit={handleSubmit}\n          handleCange={handleCange}\n          resetFilters={resetFilters}\n          mileageFrom={mileageFrom}\n          mileageTo={mileageTo}\n        />\n        {!filterCatalog.length && (\n          <Message text=\"Sorry, there are no machines with such parameters!\" />\n        )}\n        <CatalogList data={filterCatalog} />\n      </Section>\n    </>\n  );\n};\nexport default CatalogPage;\n"],"names":["useState","dataCatalog","setDataCatalog","filterCatalog","setFilterCatalog","inputBrand","setInputBrand","inputPrice","setInputPrice","mileageFrom","setMileageFrom","mileageTo","setMileageTo","isLoading","setIsLoading","useEffect","catalogCars","getCatalogCar","response","data","console","log","Loading","handleSubmit","evt","preventDefault","filterCar","filter","make","includes","rentalPrice","handleCange","target","name","value","resetFilters","selectInputBrand","document","getElementById","selectInputPrice","innerHTML","clearSelect","length","text"],"sourceRoot":""}