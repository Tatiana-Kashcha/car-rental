{"version":3,"file":"static/js/572.6f8849a0.chunk.js","mappings":"gPAEaA,E,OAAOC,GAAAA,GAAH,4G,SCAJC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,SAAC,EAAD,UAASA,GAAvB,E,kBC8CvB,EAvCsB,WACpB,OAAoBC,EAAAA,EAAAA,KAAbC,GAAP,eACA,GAA8CC,EAAAA,EAAAA,UAAS,IAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GAEb,IAAME,EAAmB,mCAAG,wGAElBC,EAAWR,EAAUS,KAAI,SAAAC,GAAE,OAAIC,EAAAA,EAAAA,GAAkBD,EAAtB,IAFT,SAIAE,QAAQC,IAAIL,GAJZ,OAIlBM,EAJkB,OAMlBC,EAAcD,EAAUL,KAAI,SAAAO,GAAQ,OAAIA,EAASC,IAAb,IAE1Cd,EAAmBY,GARK,gDAUxBG,QAAQC,IAAR,MAVwB,yBAYxBd,GAAa,GACbe,EAAAA,QAAAA,SAbwB,4EAAH,qDAgBzBb,GACD,GAAE,CAACP,KAGF,+BACE,UAACqB,EAAA,EAAD,CAASC,MAAM,iBAAf,UACGlB,GAAagB,EAAAA,QAAAA,UACZpB,EAAUuB,SACV,SAAC1B,EAAD,CAASC,KAAK,0CAEfE,EAAUuB,OAAS,IAAK,SAACC,EAAA,EAAD,CAAaP,KAAMf,QAInD,C","sources":["components/Message/Message.styled.js","components/Message/Message.js","pages/FavoritesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.h2`\n  font-size: 32px;\n  font-weight: 600;\n  padding: 20px 0;\n  text-align: center;\n`;\n","import * as s from './Message.styled';\n\nexport const Message = ({ text }) => <s.Text>{text}</s.Text>;\n","import { useState, useEffect } from 'react';\nimport { getCatalogCarById } from 'api/operations';\nimport { Section } from 'components/Section/Section';\nimport { CatalogList } from 'components/CatalogList/CatalogList';\nimport { Message } from 'components/Message/Message';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useFavorites } from 'hooks/useFavorites';\n\nconst FavoritesPage = () => {\n  const [favorites] = useFavorites();\n  const [dataFavoriteCar, setDataFavoriteCar] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const catalogFavoriteCars = async () => {\n      try {\n        const promises = favorites.map(id => getCatalogCarById(id));\n\n        const responses = await Promise.all(promises);\n\n        const favoriteCar = responses.map(response => response.data);\n\n        setDataFavoriteCar(favoriteCar);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n        Loading.remove();\n      }\n    };\n    catalogFavoriteCars();\n  }, [favorites]);\n\n  return (\n    <>\n      <Section title=\"Favorites page\">\n        {isLoading && Loading.arrows()}\n        {!favorites.length && (\n          <Message text=\"You don't have any favorite cars yet!\" />\n        )}\n        {favorites.length > 0 && <CatalogList data={dataFavoriteCar} />}\n      </Section>\n    </>\n  );\n};\nexport default FavoritesPage;\n"],"names":["Text","styled","Message","text","useFavorites","favorites","useState","dataFavoriteCar","setDataFavoriteCar","isLoading","setIsLoading","useEffect","catalogFavoriteCars","promises","map","id","getCatalogCarById","Promise","all","responses","favoriteCar","response","data","console","log","Loading","Section","title","length","CatalogList"],"sourceRoot":""}